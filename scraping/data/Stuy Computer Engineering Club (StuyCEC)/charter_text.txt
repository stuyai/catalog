Mission Statement:
StuyCEC is a club dedicated to building and programming transistor-to-transistor logic (TTL) computers.

What days does this organization meet?:
Wednesday, Friday, Monday

What is the meeting schedule?:
During our design phase, most of the work will be done online with occasional meetings happening once or twice a month. However, during our manufacturing and testing meetings will take place 1-3 times a week.

What is the purpose of this activity?:
Over the course of the school year, members will participate in the manufacturing, programming, and testing processes of our very own CPU designs. Our primary focus for the 2023-2024 year will be on constructing a simple TTL CPU.

What is a TTL CPU?
TTL processor is a central processing unit (CPU) constructed using Transistor-Transistor Logic (TTL) technology. In TTL technology, digital circuits are built using discrete transistors, resistors, and diodes. These circuits are assembled on printed circuit boards or breadboards to create functional logic gates and other digital components.

Wait, so are we building the new Intel CPU or NVIDIA GPU?
No, those kinds of devices require the expertise of a team of hundreds upon thousands of highly skilled engineers and technicians. We will be focused on building simple, small-scale projects such as 8-bit or 16-bit CPUs, simple graphics cards, and digital synthesizers. 

What will the overall design and manufacturing process look like?
In order to build a successful TTL CPU, we first outline the requirements that we want our design to fulfill. Then we will create a simple emulator for our design in code or a logic simulator. After an emulator is complete and some simple demo/debug programs are written for it we will move on to the build phase. During this phase, we will first create schematics and then assemble each section of the computer by hand on a breadboard. If all goes well, we will move on to a finalized printed circuit board (PCB) design

We are not a gaming PC-building club!
Building your own gaming setup is very different from building a custom CPU. All of the components must be built from scratch and the language and instructions used on the system must also be made from scratch. 

StuyCEC will not restrict membership or otherwise discriminate on the basis of race, color, ethnicity, national origin, gender, sex, sexual orientation, disability, age, or any other such factors.

How does this activity benefit Stuyvesant?:
Through our club, others can be exposed to the field of computer engineering and the various other disciplines which are included under it (such as electrical engineering, computer science, and signal processing). 

Through demos of our projects, we can not only benefit the reputation of Stuyvesant High School but also the creativity and skill set of others in general. Members of our club can add the projects they work on to their portfolios, which will benefit them when they apply to any job or internship related to STEM. 

The United States currently houses the greatest amount of computer hardware companies in the world. However, not much emphasis is placed on the field of computer engineering. Our club aims to provide exposure to this field and help jumpstart the computer engineers of the future. Computers are found in almost every aspect of our lives and are an extremely strategic technology.

Through building computers using TTL components, members can learn about important concepts in electrical engineering and various types of components and their purposes and use cases. 

Programming our computers will also create an understanding of how modern programming languages work at their core. In fact, we will be quite literally programming with ones and zeros, eventually building up to our own assemblers and programming languages. We also dive deep into various algorithms used to approximate and compute certain functions or values (After all it is called a computer for a reason). 

Designing, building TTL computers, and applying them in projects requires some level of creativity and innovation. Through the freedom and resources of computer engineering, we believe that our club strengthens creativity and encourages involvement in STEM.

How does this activity appoint leaders?:
At the start of a new project, we will either split up members into separate teams each focused on a single sub-system or design/manufacturing process. For each team, there will be a team leader. 

Those who joined the club after the team assignment will have to talk to the leaders of the club (not team leaders) to be placed on one of the teams. 

Towards the end of the year, graduating leaders will be replaced by members of their choosing. If two-thirds of the club are to object to the decision, it will be withdrawn in favor of a leader of their choosing. 

Let it be known that members who regularly attend and contribute have a higher chance of being given a leadership position. 

Discrimination on the basis of race, color, ethnicity, national origin, gender, sex, sexual orientation, disability, age, or any other such factors will result in being kicked out of the club. Any actions that violate the schoolâ€™s code of conduct or directly hinder the club's efforts will also result in disciplinary action.

What makes this activity unique?:
Computer Engineering is an extremely important yet often somewhat overlooked field that combines concepts from electrical engineering, computer science, and signal processing. Unlike other computer-science-related clubs which only mostly deal with the software of a computer, we are mainly hardware focused. Unlike learning a computer language, we learn about how the computer which runs your code actually works and how the design of the hardware shapes the software. In fact, learning how a computer works on the hardware side is extremely helpful in understanding various aspects of computer programming. 

We approach everything with a hands-on approach, actually building things by hand and seeing abstract concepts being implemented into reality. 

Currently, there are no clubs dedicated to extremely low-level, hardware-oriented aspects of computing. We would like to be the first!

